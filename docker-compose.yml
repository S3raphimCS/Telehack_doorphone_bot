version: '3.9'

services:
  db:
    image: postgres:latest
    container_name: pgdb
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_INITDB_ARGS: --auth=md5
      POSTGRES_DB: doorphone_bot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: 192.168.34.102
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    networks:
      bot-network:
          ipv4_address: 192.168.34.102
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: telegram_bot
    restart: always
    env_file: 
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./bot:/app
    ports:
      - '8000:8000'
    networks:
        bot-network:
          ipv4_address: 192.168.34.45

  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    restart: unless-stopped
    depends_on:
      - db
    env_file: 
      - .env
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - POOL_MODE=transaction
      - MAX_CLIENT_CONN=1000
      - DEFAULT_POOL_SIZE=20
      - MIN_POOL_SIZE=5
      - RESERVE_POOL_SIZE=5
      - RESERVE_POOL_TIMEOUT=5
      - SERVER_RESET_QUERY=DISCARD ALL
      - SERVER_CHECK_QUERY=select 1
      - LOG_CONNECTIONS=1
      - LOG_DISCONNECTIONS=1
      - LOG_POOLER_ERRORS=1
      - STATS_PERIOD=60
      - AUTH_TYPE=md5
    volumes:
      - pgbouncer-data:/var/lib/pgbouncer
    networks:
      bot-network:
          ipv4_address: 192.168.34.30
  
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      bot-network:
          ipv4_address: 192.168.34.4


networks:
  bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.34.0/24

volumes:
  postgres-data:
  pgbouncer-data:
  redis-data: